import numpy as np

activity_dict={
0:"Referral",
1:"Gynecological investigation",
2:"MDT",
3:"CT",
4:"MRI",
5:"Outpatient clinic"}

#Patient processes. Patient process on rows, activity on columns
#1 if patient process conducts activity, 0 otherwise
patient_processes=np.array([
        [1,1,1,0,1,1],
        [1,1,0,0,1,1],
        [1,0,0,0,0,1],
        [1,1,0,0,0,1]])

#Objective value weight
W_jn=np.matrix([
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9],
        [0,1,2,3,4,5,6,7,8,9]])

#New demand in queue j in time period t
D_jt=np.matrix([
        [5,0,0,0,0,0,0,0,0,0],
        [5,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0]])

#Max number of days allowed before activity a
F_ga=np.array([
        [2,3,30,40,50,60,70,80,80,100],
        [10,20,30,40,50,60,70,80,80,100],
        [10,20,30,40,50,60,70,80,80,100],
        [10,20,30,40,50,60,70,80,80,100],
        [10,20,30,40,50,60,70,80,80,100],
        [10,20,30,40,50,60,70,80,80,100],
        [10,20,30,40,50,60,70,80,80,100],
        [10,20,30,40,50,60,70,80,80,100],
        [10,20,30,40,50,60,70,80,80,100],
        [10,20,30,40,50,60,70,80,80,100]])

#Resource capacity for resource r at time t
L_tr=np.array([
        [10,10,10,10,10,10,10,10,10,10],
        [10,10,10,10,10,10,10,10,10,10],
        [10,10,10,10,10,10,10,10,10,10],
        [10,10,10,10,10,10,10,10,10,10],
        [10,10,10,10,10,10,10,10,10,10],
        [10,10,10,10,10,10,10,10,10,10],
        [10,10,10,10,10,10,10,10,10,10],
        [10,10,10,10,10,10,10,10,10,10],
        [10,10,10,10,10,10,10,10,10,10],
        [10,10,10,10,10,10,10,10,10,10]])

#Queue j's usage of resource r
H_jr=np.array([
        [5,5,1,1,1,1,1,1,1,1],
        [5,5,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1]])

#Expected delay from queue i to j
M_ij=np.matrix([
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1]])

#Fractions of patients moving from queue i to queue j
Q_ij=np.matrix([
        [0,1,0,0,0,0,0,0,0,0],
        [0,0,1,0,0,0,0,0,0,0],
        [0,0,0,1,0,0,0,0,0,0],
        [0,0,0,0,1,0,0,0,0,0],
        [0,0,0,0,0,1,0,0,0,0],
        [0,0,0,0,0,0,1,0,0,0],
        [0,0,0,0,0,0,0,1,0,0],
        [0,0,0,0,0,0,0,0,1,0],
        [0,0,0,0,0,0,0,0,0,1],
        [0,0,0,0,0,0,0,0,0,0]])

patient_processes=np.array([
        [1,1,1,0,1,1],
        [1,1,0,0,1,1],
        [1,0,0,0,0,1],
        [1,1,0,0,0,1]])
